
# Configuration for create_transit_centroid_connectors.py and calc_time_and_toll.py

# Configuration Summary: update this configuration file to your own scenario's specifications
#     Create transit centroid connector links based on transit boarding nodes and a TAZ shapefile with associated centroid nodes
#     Calculate toll and travel time fields for an RDR link input file based on user-defined TNC and transit parameters

# ==============================================================================

[common]

# Run name
# Used to name log files for distinction between various helper tool runs
run_name = 'QS4'

# Output directory
# All helper tool outputs are created here
output_dir = 'C:\GitHub\RDR\Data\qs4_create_network\generated_files'


# ==============================================================================

[transit_connector]

# Parameters specific to create_transit_centroid_connectors.py helper tool

# Path to roadway network node CSV file
# This is used to identify location of centroid nodes AND to concatenate in final node CSV file
# Node CSV file should contain all transportation network centroids and road intersections
# Required fields are node_id, x_coord, y_coord, node_type
# Node type field should be clearly specified as one of the following: centroid, road intersection
road_node_csv = 'C:\GitHub\RDR\Data\qs4_create_network\road_node.csv'

# Path to roadway network link CSV file
# This is used to concatenate in final link CSV file
# Link CSV file should contain all road centroid connectors and road links
# Required fields are link_id, from_node_id, to_node_id, directed, length (miles), facility_type, capacity, free_speed (mph), lanes, allowed_uses
# Centroid connectors should have facility_type = 11, high capacity, low free_speed, lanes = 1
road_link_csv = 'C:\GitHub\RDR\Data\qs4_create_network\road_link.csv'

# Path to transit network node CSV file
# This is used to identify location of transit boarding nodes AND to concatenate in final node CSV file
# Node CSV file should contain all transit stops and service nodes (can be created by GTFS2GMNS tool)
# Required fields are node_id, x_coord, route_type, node_type
# Route type field should be clearly specified as one of the following: 0 for tram, 1 for metro, 2 for rail, 3 for bus
# Node type field should be clearly specified as one of the following: stop, rail_station, metro_station, tram_service_node, metro_service_node, rail_service_node, bus_service_node
transit_node_csv = 'C:\GitHub\RDR\Data\qs4_create_network\GTFS_QS4\node.csv'

# Path to transit network link CSV file
# This is used to concatenate in final link CSV file
# Link CSV file should contain all transit service, boarding, and transfer links (can be created by GTFS2GMNS tool, transit centroid connectors will be created by script)
# Required input fields are link_id, from_node_id, to_node_id, facility_type, dir_flag, link_type, length (miles), lanes, capacity, free_speed (miles per hour)
# Facility type field should be clearly specified as one of the following: tram, metro, rail, bus, sta2sta (for transfer links)
# Link type field should be clearly specified as one of the following: 1 for service link, 2 for boarding link, 3 for transfer link
transit_link_csv = 'C:\GitHub\RDR\Data\qs4_create_network\GTFS_QS4\link.csv'

# Path to TAZ shapefile
# This is used to identify which TAZs can access which transit nodes
# Should contain polygons for each traffic analysis zone (TAZ)
# Required field in shapefile is ID (not case sensitive)
TAZ_shapefile = 'C:\GitHub\RDR\Data\qs4_create_network\QS4_zones\zones.shp'

# Search Distance
# Search radius for determining the maximum threshold of travel from a TAZ to a transit node
# Include units (e.g., feet, meters, yards)
search_distance = '0.25 Miles'


# ==============================================================================

[travel_cost]

# Parameters specific to calc_time_and_toll.py helper tool

# Path to comprehensive network node CSV file
# Can be created by create_transit_centroid_connectors helper tool
# Required fields are node_id, x_coord, y_coord, node_type
# Node type field should be clearly specified as one of the following: centroid, road intersection, transit boarding, transit
node_csv = 'C:\GitHub\RDR\Data\qs4_create_network\generated_files\combined_node.csv'

# Path to comprehensive network link CSV file
# Can be created by create_transit_centroid_connectors helper tool
# Required fields are link_id, from_node_id, to_node_id, directed, length (miles), facility_type, capacity, free_speed (mph), lanes, allowed_uses
# Helper tool will create a new file link_final.csv with added fields: toll (cents), travel_time (minutes), toll_nocar (cents, optional), travel_time_nocar (minutes, optional)
link_csv = 'C:\GitHub\RDR\Data\qs4_create_network\generated_files\combined_link.csv'

# Centroid Connector Added Cost
# In cents, applied as toll to all centroid connectors in the network to discourage unrealistic routing through centroids
# Default of 1000 cents based on validation study on a medium-size real-world transportation network
centroid_connector_cost = 1000

### TRANSIT ###
# The following parameters need only to be defined if the user includes transit in their network
include_transit = True

# Transit Fare
# In cents, applied as toll to transit boarding links
transit_fare = 200

# Bus Wait Time
# In minutes, applied as travel time to transit boarding and transfer links
bus_wait_time = 7

# Tram/Subway/Rail Wait Time
# In minutes, applied as travel time to transit boarding and transfer links
subway_wait_time = 4

### TNC ###
# The following parameters need only to be defined if the user includes no-car households in a separate trip table
include_nocar = True

# TNC Initial Charge
# In cents, applied as toll to road centroid connectors originating from centroid for 'nocar' trip table
tnc_initial_cost = 300

# TNC Cost Per Mile
# In cents, applied as toll to road links for 'nocar' trip table
tnc_cost_per_mile = 250

# TNC Wait Time
# In minutes, applied as travel time to road centroid connectors originating from centroid for 'nocar' trip table
tnc_wait_time = 10

